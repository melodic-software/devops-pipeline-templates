parameters:
  - name: vmImage
    displayName: Virtual Machine Image
    type: string
    default: "ubuntu-latest" # windows-latest, macos-latest
  - name: buildConfiguration
    displayName: Build Configuration
    type: string
    default: "Release"
    values:
      - "Debug"
      - "Release"
  - name: buildPlatform
    displayName: Build Platform
    type: string
    default: "AnyCPU"
    values:
      - "AnyCPU"
      - "x86"
      - "x64"
      - "ARM"
  - name: projectName
    displayName: Project Name
    type: string
  - name: targetFramework
    displayName: Target Framework
    type: string
    default: "DotNet"
    values:
      - "DotNet"
      - "DotNetCore"
      - "DotNetStandard"
      - "DotNetFramework"
  - name: dotNetSdkOptions
    displayName: .NET SDK Options
    type: object
    default:
      sdkVersion: ""
      useGlobalJson: true
  - name: nuGetOptions
    displayName: NuGet Options
    type: object
    default:
      useCache: false
      clearCache: false
  - name: packageOptions
    displayName: Package Options
    type: object
    default:
      signAssembly: true
      includeSymbols: true
      symbolPackageFormat: "snupkg"
      noBuildBeforePack: true
      releaseNotes: ""
      azureDevOpsPush: true
      azureDevOpsFeed: ""
      gitHubPush: false
      proGetPush: false
      proGetServiceIndex: ""
  - name: testOptions
    displayName: Test Options
    type: object
    default:
      runTests: true
      testProjects: ["*.csproj"]
      testsPathPattern: "**/tests*/**"
  - name: includeLogSteps
    displayName: Include Log Steps
    type: boolean
    default: false
  - name: dryRun
    displayName: Dry Run
    type: boolean
    default: false

variables:
  - name: VirtualMachineImage
    value: ${{ parameters.vmImage }}
  - name: BuildConfiguration
    value: ${{ parameters.buildConfiguration }}
  - name: BuildPlatform
    value: ${{ parameters.buildPlatform }}
  - name: ProjectName
    value: ${{ parameters.projectName }}
  - name: TargetFramework
    value: ${{ parameters.targetFramework }}
  - name: SignAssembly
    value: ${{ parameters.packageOptions.signAssembly }}
  - name: IncludeSymbols
    value: ${{ parameters.packageOptions.includeSymbols }}
  - name: SymbolPackageFormat
    value: ${{ parameters.packageOptions.symbolPackageFormat }}
  - name: NoBuildBeforePack
    value: ${{ parameters.packageOptions.noBuildBeforePack }}
  - name: ReleaseNotes
    value: ${{ parameters.packageOptions.releaseNotes }}
  - name: RunTests
    value: ${{ parameters.testOptions.runTests }}
  - name: TestsPathPattern
    value: ${{ parameters.testOptions.testsPathPattern }}
  - name: DryRun
    value: ${{ parameters.testOptions.dryRun }}
  - group: GlobalSecrets # Must be defined as a variable group in the Azure DevOps UI
  - template: "../templates/shared/variables/global-variables.yaml"
  - template: "../templates/create-nuget-package/variables/create-nuget-package-variables.yaml"

jobs:
  - job: createPackage
    displayName: Create NuGet Package
    continueOnError: false
    steps:
      - template: ../templates/create-nuget-package/steps/create-nuget-package-steps.yaml
        parameters:
          targetFramework: ${{ parameters.targetFramework }}
          dotNetSdkVersion: ${{ parameters.dotNetSdkOptions.sdkVersion }}
          useGlobalJson: ${{ parameters.dotNetSdkOptions.useGlobalJson }}
          useNuGetCache: ${{ parameters.nuGetOptions.useCache }}
          clearNuGetCache: ${{ parameters.nuGetOptions.clearCache }}
          includeAzureDevOpsPush: ${{ parameters.packageOptions.azureDevOpsPush }}
          azureDevOpsPackageFeed: ${{ parameters.packageOptions.azureDevOpsFeed }}
          includeGitHubPush: ${{ parameters.packageOptions.gitHubPush }}
          includeProGetPush: ${{ parameters.packageOptions.proGetPush }}
          proGetPackageServiceIndex: ${{ parameters.packageOptions.proGetServiceIndex }}
          testProjects: ${{ parameters.testOptions.testProjects }}
          includeLogSteps: ${{ parameters.includeLogSteps }}

# TODO: Rename this file exension to the industry standard .yaml over .yml
# This will be a breaking change to all clients, so it may not be worth it.
# All other internal files have been renamed.

# TODO: Eventually we'll want to remove all older .NET framework paths
# It will help simplify and streamline things.
