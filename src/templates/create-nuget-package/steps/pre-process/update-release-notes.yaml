steps:
  - task: PowerShell@2
    name: UpdateReleaseNotes
    displayName: Update Release Notes
    condition: succeeded()
    continueOnError: true
    inputs:
      targetType: "inline"
      script: |
        # Define base directories and script locations
        $BaseDirectory = "$(Build.SourcesDirectory)"
        $BuildTemplatesDirectory = "$(BuildTemplateRepositoryFolder)"
        $PowerShellScriptsDirectory = "$(PowerShellScriptsDirectory)"

        # Construct the path to the primary script
        $ScriptName = "update-release-notes"
        $ChildPath = ($BuildTemplatesDirectory, $PowerShellScriptsDirectory, "update-release-notes", "$ScriptName.ps1" -join [IO.Path]::DirectorySeparatorChar)
        $ScriptPath = Join-Path $BaseDirectory -ChildPath $ChildPath

        # Define the script parameters
        $ReleaseNotes = "$(ReleaseNotes)"
        $ProjectPath = Join-Path -Path $BaseDirectory -ChildPath "$(SelfRepositoryFolder)/**/$(ProjectName).csproj"
        $SharedTemplateDirectory = Join-Path $BaseDirectory -ChildPath ($BuildTemplatesDirectory, "$(SharedTemplateDirectory)" -join [IO.Path]::DirectorySeparatorChar)

        # Log the script path and variables for debugging purposes
        Write-Host "ScriptPath: $ScriptPath"
        Write-Host "ReleaseNotes: $ReleaseNotes"
        Write-Host "ProjectPath: $ProjectPath"
        Write-Host "SharedTemplateDirectory: $SharedTemplateDirectory"

        # Execute the script with the necessary parameters
        # TODO: Convert to function, rename, and execute using function name (requires dot-sourcing the script)
        & $ScriptPath -ReleaseNotes $ReleaseNotes -ProjectPath $ProjectPath -SharedTemplateDirectory $SharedTemplateDirectory
      pwsh: true
