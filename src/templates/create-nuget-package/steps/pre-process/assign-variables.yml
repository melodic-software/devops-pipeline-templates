parameters:
  - name: testProjects
    type: object
    default: ['*.csproj']

steps:
- task: PowerShell@2
  name: AssignVariables
  displayName: Assign Variables
  condition: succeeded()
  inputs:
    targetType: 'inline'
    script: |
      # --------------------------------------------------
      # -- ASSEMBLY ORIGINATOR KEY FILE ------------------
      # --------------------------------------------------
      $AssemblyOriginatorKeyFile = "$(DownloadNuGetSigningKey.secureFilePath)"
      Write-Host "AssemblyOriginatorKeyFile: $AssemblyOriginatorKeyFile"
      Write-Host "##vso[task.setvariable variable=AssemblyOriginatorKeyFile;]$AssemblyOriginatorKeyFile"

      # --------------------------------------------------
      # -- TEST PROJECTS ---------------------------------
      # --------------------------------------------------
      # Extract the testProjects parameter and handle it directly as an array.
      $TestProjects = @(
        @(parameters.testProjects) | ForEach-Object { $_.Trim() }
      )

      # If the array is empty or contains only empty strings, set TestProjects to the default '*.csproj'.
      if (-not ($TestProjects -join '').Trim()) {
        $TestProjects = @('*.csproj')
      }
      
      # Define the path prefix
      $PathPrefix = "$(SelfRepositoryFolder)/test*/**/"

      # Initialize the array to hold formatted paths
      $FormattedProjects = @()
      
      # Prefix each project path with the specific directory structure
      foreach ($Project in $TestProjects) {
        $FormattedPath = $PathPrefix + $Project.Trim()
        $FormattedProjects += $FormattedPath
      }
      
      # Combine all formatted project paths into a single string for output
      # Use a newline to separate each path for proper interpretation in Azure DevOps tasks
      # This requires the use of the | separator in task inputs to handle multiple paths
      $TestProjectsString = $FormattedProjects -join "`n"
      
      # Output the formatted test projects string to the host
      Write-Host "TestProjects: $TestProjectsString"
      
      # Set the formatted project paths as a pipeline variable
      Write-Host "##vso[task.setvariable variable=TestProjects;]$TestProjectsString"
    pwsh: true