parameters:
  useNuGetCache: true
  clearNuGetCache: false

steps:
  # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/nuget-authenticate-v1?view=azure-pipelines
  - task: NuGetAuthenticate@1
    name: NuGetAuthenticate
    displayName: NuGet Authenticate
    condition: succeeded()

  # NuGet.config should exist in the source repository root, but this isn't guaranteed.
  - task: PowerShell@2
    name: SetNuGetRestoreSettings
    displayName: Set NuGet Restore Settings
    condition: succeeded()
    continueOnError: true
    inputs:
      targetType: "inline"
      script: |
        $NuGetConfigFile = Get-ChildItem -Path "$(SelfRepositoryFolder)" -Filter NuGet.config -Recurse | Select-Object -First 1
        if ($NuGetConfigFile) {
            $FullPath = $NuGetConfigFile.FullName
            Write-Host "Found NuGet.config at $FullPath"
            echo "##vso[task.setvariable variable=NuGetConfigPath]$FullPath"
            echo "##vso[task.setvariable variable=FeedsToUse]config"
        } else {
            Write-Host "No NuGet.config found. Using default configuration."
            echo "##vso[task.setvariable variable=FeedsToUse]select"
        }
      pwsh: true

  # This uses Azure DevOps pipeline caching.
  - ${{ if and(eq(parameters.useNuGetCache, true), ne(parameters.clearNuGetCache, true)) }}:
      - template: ../shared/nuget-cache.yaml

  # This actually clears the NuGet cache, which may only be valid for self-hosted agents.
  # It shouldn't normally be used, as there aren't many conditions where we'd want to do this.
  # One example would be a NuGet package update that overwrote an already published version.
  # This is something that really shouldn't be done, but one scenario where the cache might need to be explicitly cleared.
  # The restore step (noCache) might also be a way to avoid cache.
  - ${{ if eq(parameters.clearNuGetCache, true) }}:
      - template: ./nuget-clear-cache.yaml

  # See this link, and the documentation.
  # It describes why this condition does not check for the environment variable
  # that is set to true when the NuGet package cache has been restored.
  # https://developercommunity.visualstudio.com/t/occasional-error-netsdk1004-assets-file-projectass/1219159
  - task: DotNetCoreCLI@2
    name: NuGetRestoreDotNet
    displayName: NuGet Restore
    condition: succeeded()
    inputs:
      command: restore
      projects: "$(ProjectList)"
      feedsToUse: $(FeedsToUse)
      nugetConfigPath: $(NuGetConfigPath)
      # https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-restore
      #restoreArguments: '--locked-mode' # Required for NuGet package caching
      restoreDirectory: $(NuGetRestoreDirectory)
      #noCache: true
