steps:
# https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/dotnet-core-cli-v2?view=azure-pipelines
# https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-test
- task: DotNetCoreCLI@2
  name: RunTestsDotNet
  displayName: Run Tests
  condition: and(succeeded(), ne(variables['DotNetSDKVersion'], ''), eq(variables['RunTests'], true), ne(variables['TestProjects'], ''))
  inputs:
    command: 'test'
    projects: |
      $(TestProjects)
    arguments: --configuration $(BuildConfiguration) --collect:"$(CodeCoverageFramework)" --verbosity detailed /p:AssemblyOriginatorKeyFile=$(AssemblyOriginatorKeyFile) /p:CollectCoverage=true /p:CoverletOutputFormat=$(CoverletOutputFormat)
    publishTestResults: true  # This is optional but recommended for better tracking of test results

# The use of /p:AssemblyOriginatorKeyFile=$(AssemblyOriginatorKeyFile)' is for specific test scenarios.
# BOTH the source AND the test project must be signed if a test project requires internal visibility to the source project, and the source is signed with a strong name key.
# The test project will require these properties:
# <PropertyGroup>
#  <SignAssembly>true</SignAssembly>
#  <AssemblyOriginatorKeyFile>$(AssemblyOriginatorKeyFile)</AssemblyOriginatorKeyFile>
#</PropertyGroup>

# Publish code coverage results for both Windows and Linux
- task: PublishCodeCoverageResults@2
  displayName: 'Publish Code Coverage Results'
  condition: and(succeeded(), ne(variables['DotNetSDKVersion'], ''), eq(variables['RunTests'], true), ne(variables['TestProjects'], ''))
  inputs:
    codeCoverageTool: $(CodeCoverageTool)
    summaryFileLocation: '$(SelfRepositoryFolder)/**/test*/**/coverage.cobertura.xml'
    reportDirectory: '$(SelfRepositoryFolder)/**/test*/**/coverage'
    failIfCoverageEmpty: false