parameters:
  - name: useNuspecFile
    displayName: Use Nuspec File
    type: boolean
    default: false

# https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/dotnet-core-cli-v2
# https://learn.microsoft.com/en-us/nuget/reference/msbuild-targets#pack-target
# https://www.frakkingsweet.com/adding-metadata-to-nuget-packages-in-azure-devops-pipelines/

steps:
- ${{ if eq(parameters.useNuspecFile, false) }}:
  - task: DotNetCoreCLI@2
    displayName: NuGet Pack
    condition: and(succeeded(), ne(variables['DotNetSDKVersion'], ''))
    inputs:
      command: pack
      packagesToPack: '$(SelfRepositoryFolder)/**/$(ProjectName).csproj' # Exclude test projects if needed: "**/*.csproj;!**/*.Tests.csproj"
      packDirectory: '$(Build.ArtifactStagingDirectory)' # This is the default. The alias "outputDir" can also be used.
      configuration: $(Configuration)
      nobuild: true # The project has already been built in a previous step.
      includesymbols: true # Creates symbol NuGet packages.
      includesource: false
      versioningScheme: byEnvVar
      versionEnvVar: GitVersion_SemVer # alternative syntax GITVERSION_SEMVER (the former gets converted into the latter internally) - another older format: GitVersion.NuGetVersionV2

- ${{ if eq(parameters.useNuspecFile, true) }}:
  - task: DotNetCoreCLI@2
    displayName: 'NuGet Pack with Nuspec'
    condition: and(succeeded(), ne(variables['DotNetSDKVersion'], ''))
    inputs:
      command: 'pack'
      packagesToPack: '$(SelfRepositoryFolder)/**/$(ProjectName).nuspec' # Find .nuspec file for the project
      packDirectory: '$(Build.ArtifactStagingDirectory)'
      configuration: $(Configuration)
      nobuild: true
      includesymbols: true
      includesource: false
      versioningScheme: byEnvVar
      versionEnvVar: GitVersion_SemVer