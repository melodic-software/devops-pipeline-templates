mode: Mainline

branches:
  main:
    regex: ^main$ 
    source-branches: []
    increment: Patch
    prevent-increment-of-merged-branch-version: true
    track-merge-target: false
    tracks-release-branches: false
    is-release-branch: false
    tag: ''
    pre-release-weight: 60000

  feature:
    regex: ^features?(/[^/]+)+$
    source-branches: ['main', 'feature', 'support', 'hotfix']
    increment: Patch # ensure the version is incremented upon branch creation
    prevent-increment-of-merged-branch-version: false # allows merge commits from main to accurately update the version
    tag: 'alpha'
    pre-release-weight: 50000

  hotfix:
    regex: ^hotfix(es)?(/[^/]+)+$
    source-branches: ['main', 'support', 'hotfix']
    increment: Patch # ensure the version is incremented upon branch creation
    prevent-increment-of-merged-branch-version: false # allows merge commits from main to accurately update the version
    tag: 'beta'
    pre-release-weight: 50000

  # this applies to manually created branches to merge one branch into another
  pull-request:
    regex: ^(pull\-request(s)?|pr(s)?)(/[^/]+)*/[^/]+$
    source-branches: ['main', 'feature', 'support', 'hotfix']
    increment: Inherit
    tag: pr
    tag-number-pattern: '[/-](?<number>\d+)'

  # this applies to branches automatically created by Azure DevOps to test the result of merging
  # this is usually done when a validation branch policy has been applied
  # the format usually looks like "2.0.0-pull-5701-merge.3"
  pull-request-azure-devops:
    regex: ^\d+\.\d+\.\d+\-pull\-\d+\-merge\.\d+$
    source-branches: ['main', 'feature', 'support', 'hotfix']
    increment: Inherit
    tag: pr
    tag-number-pattern: '[/-](?<number>\d+)'

  support:
    regex: ^support[/].*$
    source-branches: ['main']
    increment: Patch
    prevent-increment-of-merged-branch-version: true
    track-merge-target: false
    tracks-release-branches: false
    is-release-branch: false
    tag: ''
    is-mainline: true
    pre-release-weight: 55000

  # these are unused branches
  # since we're using GitHubFlow for NuGet package libraries, we shouldn't need or use these
  develop:
    regex: ^dev(elop)?(ment)?$
    source-branches: []
    increment: None
    tag: ''

  release:
    regex: ^releases?[/-]
    source-branches: []
    increment: None
    tag: ''
    
# NOTE: since this is a shared template config, we can't have any properties that are repository specific defined here 
# one such config value is the array of SHA commit values that are to be ignored (specificaly for commits that affected the base version, etc.)
# there is a pipeline task that looks for specific named files in the primary repo whose contents will be appended here